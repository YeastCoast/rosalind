def kmp(text, pattern):
    lps_table = [0 for _ in pattern]
    pointer = 0
    counter = 0
    for i in range(1, len(pattern)):
        if pattern[i] != pattern[pointer]:
            counter = 0
            pointer = 0
        if pattern[i] == pattern[pointer]:
            counter += 1
            pointer += 1
            lps_table[i] = counter

    i = 0
    j = 0
    indices = []
    while len(text)-i >= len(pattern) - j:
        if text[i] == pattern[j]:
            i += 1
            j += 1
        if j == len(pattern):
            indices.append(i-len(pattern))
            j = lps_table[j-1]
        elif i < len(text) and text[i] != pattern[j]:
            if j == 0:
                i += 1
            else:
                j = lps_table[j-1]

    return indices


if __name__ == '__main__':
    # test case
    text = "GATATATGCATATACTT"
    pattern = "ATAT"
    indices = kmp(text, pattern)
    print(' '.join([str(i) for i in indices]))

    # user case example
    text = "AAGGCGTTACGAAGGCGTAATCTCTATCAAAGGCGTCAACAAGGCGTGACTAAGGCGTAAGGCGTAAGGCGTAAGGCGTCAAGGCGTGAAGGCGTATCAAGGCGTAAGGCGTTGCAGCGACAAGGCGTGTAAGGCGTGAAGGCGTAAAGGCGTAAGGCGTCGAAGGCGTGCGTAAGGCGTTAAGGCGTGTGAAGGCGTAAGGCGTCAAGGCGTAAGGCGTAAAGGCGTACGGCATTGAAGGCGTCGAGCAAGGCGTCTGAAAGGCGTAAGGCGTGAAGGCGTAAAGGCGTAAAGGCGTGAAGGCGTAAAGGCGTAAAAGGCGTAAGGCGTAAGGCGTGAAGGCGTGAAGGCGTAACCCTAAGGCGTAAGGCGTGAAGGCGTCAAGGCGTAAGGCGTTGGGTCGAGGAAGGCGTGAAGGCGTCTTAAGGCGTAAGGCGTAAAGCTAGCAATAAGGCGTAAGGCGTTCCCACCAAGGCGTTACGTCTGATAAAGGCGTGTAAAGGCGTAAGGCGTAAGGCGTAAGGCGTAAGGCGTCGCTAAGGCGTGAGTACAAAGGCGTTAAGGCGTACAATAAGGCGTCAAGGCGTAAGGCGTATGAAGGCGTGAGGAGAAGGCGTCGCTCCGGGCTGGTAAGGCGTGATTAAAGGCGTCCCAGGTTCCGTAAGGCGTGAAAGGCGTGAAGGCGTAAGGCGTAGATCCTGGGAGGTAAGGCGTAAGGCGTTCCAAGGCGTAAAGGCGTAGGTAAAGGCGTACCAAGGCGTAAGGCGTCCTTGCGCCAGCAAGGCGTAAGGCGTGGGAAGAAGGCGTGGGAAAAGGCGTAGAAGGCGTCTAAGGCGTGAAGGCGTAGAAGGCGTCAAGGCGTAGAAGGCGTACACTAAGGCGTCAAGGCGTGAAGGCGTGTAAGGCGTAAGGCGTAAAGGCGTGCAAGGCGTAGGAAGGCGTGCAAGGCGTGTGACCTAAGGCGTAAAGGCGTTAAGGCGTTAAGGCGTTTAATAATAAAGGCGTGTCAAAGGCGTAGAAGGCGTGACTGCCAAGGCGTTTAAGGCGTAAGCGTAAGGCGTAAGGCGTCCAAGGCGTAAGGCGTACGAAGGCGTTCATAAGGCGTCAAGGCGTCAAGGCGTACGGCGTAAGGCGTCAACGCCCGGAAAGGCGTTAAAGGCGTACGGCATGTCGAAGGCGTTTCAAGGCGTTCAAGGCGTATTATCAGCCATGTAGAAGGCGTAAGGCGTATAAAGGCGTAAGGCGTCGAAGGCGTCAAGGCGTAAGGCGTAAGGCGTAAAAACTACAAAGGCGTATAAGGCGTAGCAAAGGCGTGCTTAAGGCGTAAAGGCGTAACTATTGAAGGCGTAAAGGCGTAAGGCGTAAGAAGCAAGGCGTAAGGCGTAAGGCGTAATACAAGGCGTAAGGCGTCCATAAGGCGTTCGTCAAGGCGTAAGGCGTACCAAAGGCGTTAAGGCGTGTAAATAAGGCGTGAGCCTGACAAGGCGTATTGAAGGCGTTCAAGGCGTTAAAGGCGTCTAAGGCGTGCTTACACAAGCCCGTAATATGTTAAGGCGTTGTAAGGCGTTATAAGGCGTCAAGGCGTGAAAGGCGTAAGGCGTAAGGCGTCAAGGCGTACTTGAAAGGCGTTAGCAAGGCGTAAAGGCGTTAAGACCTTAAAGGCGTAAGGCGTTAAGGCGTTAGAAGGCGTCAAGAGTCAGTAAGGCGTATTCTCATTCATCAAGGCGTGAATAAGGCGTAAGGCGTAACAAGGCGTCTCAGAAGGCGTTAAGAAGAAAAGGCGTCGAAGGCGTGCCAAGGCGTAGGAAGGCGTACATATAAGGCGTGAAGGCGTGCGGCGGAAGGCGTAAGGCGTTAAGGCGTTCAAAGGCGTGCAAGGCGTGTCAAGGCGTGTGGGGGTGCGCCAGGAAGGCGTGACATCCTCAAGGCGTACATGGTAAGGCGTAAGGCGTAAGGCGTCTGGGCTCTGAAGGCGTGCGAAGGCGTGAGGTGAAGGCGTCAAGGCGTAAAGGCGTAAAGGCGTAAGGCGTAAGGCGTAAGGCGTTAAAAGGCGTGGCGACACAAAAAGGCGTAAGGCGTAAGGCGTGGCAAGGCGTTAGAAGGCGTGAGCAAGGCGTGAAAAGGCGTTAGAAGGCGTTTGAGAAGGCGTTGAAGGCGTAGTGAAAGGCGTACAAGGCGTCAAGGCGTGAAATAAAAGGCGTTTCTCATTGGTGGAAGGCGTAAGGCGTAAAAGGCGTGAAAGGCGTTTAAGGCGTCACCAACAAGGCGTGAAGGCGTCAAGGCGTCAGTTAGGAAAGGCGTTCAAGGCGTGTAAGGCGTGTTAAGGCGTTGCCTAAGGCGTTTGCAAGGCGTAAGGCGTCAAGGCGTCAAGGCGTGCAAGGCGTCCGAAGGCGTGAAGGCGTAAGGCGTTGAAAGGCGTCGATCCTCTACTGAAGGCGTAAGGCGTACCATGAAGGCGTAGGAAGGCGTAAGGCGTGCGGAAAGGCGTTGAAGGCGTTGAAGGCGTGAGTGAAGGCGTAAGGCGTACGCAGGAAAGGCGTCCAAGGCGTTGATTAAGGCGTCTGCGAAGGCGTACAAGGCGTAAGGCGTAAGGCGTAAAGGCGTAAAGGCGTATCAAGGCGTTAAGGCGTTGAAGGCGTGAAGGCGTTTAAGGCGTCGTAAGGCGTGAAGGCGTTAAGGCGTGCCAAGGCGTGAAGGCGTGCAAAGGCGTAAGGCGTCCAAGGCGTGTTGGAAGGCGTGATCGAAGGCGTACAAGGCGTAAGGCGTAAGGCGTAAGGCGTTGCAAGGCGTTAACACAAGGCGTAAGGCGTTAAGGCGTTAAGGCGTGTGAAGGCGTCCAATTAAAGGCGTAAGGCGTTATTCAAAAGGCGTCACAAAAGGCGTTGTTCGAAGGCGTTGGACCTAAAGGCGTAAGGCGTAAGGCGTGCTTCATAAGGCGTGGCGAGAGATCCTAAGGCGTCCAAAGGCGTCAAGGCGTAAGGCGTAAGGCGTAAAGGCGTAAGGCGTGTAAGGCGTAAGGCGTCAAAGGCGTAAGGCGTAAGGCGTGTGCCAAGGCGTAAGGCGTGAAGGCGTAACAAGGCGTAAGGCGTACAAGGCGTACTTACCTTAAGGCGTAAGGCGTTAAAGGCGTTAAGGCGTTAAGGCGTCACAAGGCGTCTAAGGCGTAAGGCGTGTAAAGGCGTGGCAAAGGCGTAAGGCGTAAGGCGTTAAGTACAAGGCGTAAGGCGTCTGAAGGCGTCGTCCAAGGCGTGGAAGGCGTGAAATGCAAAGGCGTAAGGCGTAAGGCGTAAGGCGTTCTTAAGGCGTCAAAAAGGCGTCAAGGCGTAAGGCGTCTAAAGGCGTTAGCAAGGCGTAAGGCGTGTTTGGAAAGGCGTTGAAAGGCGTCCTTAAGGCGTCGTTTCAAGGCGTTACCTGCAAGGCGTGCAAGGCGTATTGCAAGGCGTAAGGCGTAAGGCGTGTAAGGCGTGAAGGCGTGCACGGTAAAGGCGTAAGGCGTGAAAGGCGTTCAAGGCGTGTCAAGGCGTGAAGGCGTAAGGCGTTCTGAAGGCGTTGTCTAAGGCGTTCAAGGCGTACAAAAGGCGTTGTCACTCCAATAAGGCGTAAGGCGTCATCCACAAGGCGTACAAGGCGTCGCAAGGCGTTAAGGCGTGAAAGGCGTTGAAGGCGTTCATAAGGCGTTACGCTTTAGCTAAGGCGTCGCAAGGCGTCTGAAGGCGTCAAGGCGTACGCAACCTATGGTAGTATCTAAAAAGGCGTAAGAAGGCGTCATTATAAGGCGTAGAAAGGCGTAAGGCGTAAAGGCGTAAGGCGTTCTGTGTGGAATTGGGAAGGCGTGCCACAAGGCGTATGAAGGCGTGTGCAAGGCGTCAAAGGCGTGCAAGGCGTCCTTTAGAAGGCGTAAGGCGTTCAAGGCGTCTTTAGAAGGCGTCAAAAGGCGTTGAAGGCGTCCAGAAGGCGTAAGGCGTAAGGCGTAAGGCGTAAGGCGTCCCAAGGCGTCGGAAGGCGTAAAGGCGTCAGAAAGGCGTAAGGCGTAAGGCGTAAGGCGTCCGCAAGGCGTCCTCAAGAAGGCGTAACGATAATCAAACTGCCGTCATGCAAGGCGTACTAAGGCGTAAGGCGTAGGGTGAAGGCGTGAAGGCGTAAGGCGTGAAGGCGTAAAGGCGTCGCGAGCAAGGCGTGCAAGGCGTAAAGGCGTCAAGGCGTCTCAAGGCGTTTCATATGCCCCAAAAGGCGTAAGGCGTAAGGCGTCAAGGCGTTGCTAAGGCGTGTAAGGCGTAAGGCGTCAAGGCGTCACTCGGAAAGGCGTAAGGCGTAAAAGGCGTAAGGCGTCAAGGCGTGCAAGGCGTGAAAGCCAAGGCGTGGCAAGGCGTAAGGCGTGAAGGCGTATAAGGCGTTCCTGAAGGCGTACAAGGCGTTGAAGGCGTCTACCAAAGGCGTAAGGCGTGAAGGCGTAAGGCGTTGACTAGCAATGAAAGGCGTCACGAGATAAAAGTATCATTACTGTAGAAGGCGTAAGGCGTCCAAGGCGTTCGGAAGGCGTTAGTAAGGCGTCACAAAGGCGTCAAGGCGTTGGGTCAAGGCGTAAGGCGTATAGAAGGCGTAAACGCCGCTTAAGGCGTAGAAGGCGTAAGGCGTAAGGCGTAAGGCGTAAGGCGTCAAGGCGTGATAAGGCGTTAAGGCGTAAGGCGTATAGTAAAGGCGTATAAAGGCGTTAAAGGCGTAGGCTCGGAAGGCGTATGGGCAAGGCGTAGAACTGCGTCAAAGGCGTGTCGCTCTAAGGCGTGAAGGCGTGAATGTGAAGGCGTCAAAGGCGTCAAGGCGTCCTCGGAAGGCGTTAAGGCGTGGTTCAAGGCGTAAGGCGTAAGGCGTACCCCTTCAAGGCGTAAGGCGTGCCGAAAGGCGTGAAGAAAAGGCGTTGGAAGGCGTCAAAGGCGTCAAAGGCGTCAAGGCGTAATTTAGAAGGCGTAAGGCGTGAGGAAGGCGTATGAATTAGAAGGCGTCTCCGAAAAAGGCGTTCTTGTAAGGCGTGACGAAGGCGTTCATAAGGCGTAAGGCGTAAAGGCGTAAGGCGTAAACTGCCTGAAGGCGTAAGGCGTTAGGAAAAGGCGTTCTCCAACTCAAGGCGTCAAGGCGTGCCGGGCCCAAGGCGTGCGAAGGCGTCATAAGGCGTAACTAAGGCGTGCGTAAAGGCGTGAGTCGGAAAGGCGTGTAAGGCGTCATTAAGGCGTCTCGTAAGGCGTTGCGTTCGAAGGCGTGAAGGCGTGAGATGCAAGGCGTAAGGCGTCAAGGCGTCAAGGCGTATTCAAAGGCGTATAAGGCGTTGTCAAGGCGTAAGGCGTAAGGCGTTACGGTCTACAATAAGTCACCGAAGGCGTCGAAGGCGTAAAGGCGTGCGTGCAAAGGCGTAAGGCGTAAGGCGTGTAAGGCGTTAAGCAAGGCGTTAAAGGCGTGAAGGCGTAAAGGCGTAAGGCGTGAAGGCGTCCAAAAAGGCGTAAGGCGTTAACAACAACCCCCGGCAAGGCGTTTTAAGGCGTCAAGGCGTAGAAGGCGTATCCTCGTAAGGCGTAAGGCGTGGAAAGGCGTGAAGGCGTTTTAGTAAGGCGTTTGCAAGGCGTAAGGCGTAGTTGACCACCTGGAAGGCGTAAGGCGTCTACTCGAAGGCGTGCTGAAGGCGTTGCCAGTATCAAGGCGTTAAGGCGTCACTAAGGCGTAAGGCGTGAAGGCGTACTACTAAGGCGTAAGGCGTAAGGCGTAAGGCGTTCATAAGGCGTTTTCTAAGGCGTTGGAAGGCGTAAGGCGTAGTAAGGCGTGAAAAGGCGTTTTTAAGGCGTAAGGCGTCAAGGCGTACGAAGGCGTGGTTCCCCTACAGCCAGGACCTATAAGGCGTAAGGCGTTGGCTAAGGCGTAAGGCGTAAGGCGTTGTCAAAGGCGTTGAAGGCGTTAAGGCGTAAGGCGTTAAGGCGTATCGATAAGGCGTACTAGCAAGGCGTGTTCCGTAAGGCGTCAGAAGGCGTAAGGCGTCAGATAAAGGCGTAGAAGGCGTAGTAAGGCGTATCCAAGGCGTAAAATAAGGCGTAAAGGCGTTCGGAAGGCGTTAAGGCGTGAAGGCGTTCGTAAGGCGTAAGGCGTAAAGGCGTGGAAAGGCGTAAGGCGTAAATAAAGGCGTGGAAAGGCGTGTGAAGGCGTTGCAAGGCGTTCGAATTACAGAAGGCGTAAGGCGTGAACAAGGCGTCAAAAGGCGTTAAAGGCGTCTAAGGCGTACCGCAAGGCGTTCTGAAGGCGTAAGGCGTAAGGCGTAAGGCGTCGAAAGGCGTTGAAGGCGTAAAAGGCGTAAGGCGTCAAGGCGTAGTGATGGTCTACGGCATTGTAGAAGGCGTAAGGCGTAAGGCGTTAAGGCGTATTCAAGGCGTAAGGCGTGTCATCAAGGCGTAAGGCGTTAAAGGCGTAAGGCGTTAAGGCGTTTAAGGCGTCGTAAAGGCGTCAAGGCGTGTGTAAGGCGTGGATAAGGCGTATGAAGGCGTAAGGCGTGCTTAAAGGCGTAAAGGCGTAAAGGCGTAGGTAAAGGCGTCTACTAGAAGGCGTGAAAGGCGTAAGGCGTAAGGCGTTATAAAGGCGTCAAGGCGTGAAGGCGTTACAAAGGCGTAAGGCGTAAGGCGTTTAAGGCGTAAGGCGTCACTAAGGCGTGGAAGGCGTAAGGCGTGAAGGCGTACAAGGCGTGTAAGGCGTAAGGCGTTGGTCTAAGGCGTCGAAGGCGTTAAGGCGTTAAGGCGTAAGGCGTGAAGGCGTAAGGCGTGGAAGGCGTGAAGGCGTCGGCCACAAAGGCGTCAAAAGGCGTAAGGCGTTTAAGGCGTGAAAGGCGTAAGGCGTGTCGGTGCAAGGCGTGTAACTAGAAGGCGTTTAAAGGCGTAAAGGCGTTAAATTTAAAGGCGTAAGGCGTATAAAGGCGTGAAAGGCGTTCAACTAAGGCGTCGTTACCAAGGCGTGAAGGCGTTAAGGCGTGAAGGCGTGACTTATTGAAGGCGTAAGGCGTCGAAGGCGTAAGGCGTCTTACAAGGCGTAAGGCGTTAGAAGGCGTGAAGGCGTGTAAAGGCGTATTTAAGGCGTTAAGGCGTTGCTTAAGGCGTAAAGGCGTAAGGCGTTAAGGCGTAAGGCGTAAAAAGGCGTAGACAAGGCGTTCACAAGGCGTAACAGGTGAAGGCGTAGTCAAGGCGTGATCATTCAAAGGCGTAAGGCGTGAAGGCGTCTAAGGCGTAAGGCGTAAAGGCGTAAAGGCGTCGTAAGGCGTTAAGGCGTAGCCGAAGGCGTTTTTTTAAGGCGTACCAAGGCGTCAAGGCGTAAGGCGTTTAAGGCGTACCACTTCCTCTAAGGCGTAAAGGCGTCGCGAAAGGCGTAAGGCGTCAAAAGGCGTCGAGAAGGCGTAGGAGAAAGGCGTCCCCGATTGTGAAGGCGTCTCGAAGGCGTAAGGCGTCAAGGCGTGTAGTAAAGGCGTAAAAGGCGTAAAGGCGTGAGTCTGAAGGCGTGAGTAAGGCGTCAAGGCGTAAGGCGTCAAAAAGGCGTAAGGCGTATTGGTAAGGCGTGAGAAGGCGTTAGGACAAGGCGTCGAAGGCGTACAAAGGCGTAAAGGCGTCGAAGGCGTCAGTCAAGGCGTAAGGCGTAAGGCGTTCTATTCGCGTCCCCGAAGGCGTAAGGCGTAAGGCGTGTCCAAGGCGTCAAGGCGTATTAAGGCGTGAGAAGGCGTCCGATTGTAAGGCGTTGCAAAAGGCGTAAGGCGTAAGGCGTACTCAAGGCGTGTAACGAGGTAAAGGCGTCAAGGCGTCCAAGGCGTAAGGCGTATTGATAAGGCGTTTCCCTTAAGGCGTAAGGCGTAAGGCGTGTCACGTTAAGGCGTAAGGCGTCAAGGCGTGAGGAGTATAAAGGCGTGCGGTAAGAAGGCGTGCAAGGCGTAAGGCGTTAGACGGAAGGCGTCCCGACTGAGAAAGGCGTGAAATCGTCTTTAAGGCGTAGAAGGCGTGTACAAGGCGTAAGGCGTAAGGCGTAAGGCGTAAGGCGTCGTCAAGGCGTGTGATAAGTCTCGGCGAAGGCGTAGTCCACTAAGGCGTCTAAAAGGCGTGCAAGGCGTCTTTAAGGCGTCCGTGACTGAACAAGGCGTCTTTCAAGGCGTAGGAAGGCGTTGAAGGCGTTAGTTGCAAGGCGTAAAGGCGTTAAGGCGTACAAGGCGTAAGGCGTTAAGGCGTAGAAGGCGTAAGGCGTCCAAAGGGGGCCCGTAAGGCGTAAGGCGTAAGGCGTTCAAGGCGTCAAGGCGTTAAGGCGTGATCTCGAGATTCGTAAGGCGTAAGGCGTAAGGCGTGAAGGCGTCACGGTTAAGGCGTAAGGCGTTGACCTGCAAGGCGTAAGGCGTACATAAGGCGTGAAGGCGTTGGAAGCAAAGGCGTTAAGGCGTAAGGCGTACAAAAGGCGTCTTAAGGCGTAAGGCGTCAAATAAGGCGTAAGGCGTAAGGCGTAAGGCGTGAATTCGAAGGCGTCAAGGCGTCCGGAAGGCGTGAGTAAGCCGAAGGCGTAAGGCGTTAAGAATTTATAAGGCGTTTGGTTTGTGCAGAGAAGGCGTATAAGGCGTAGAAGGCGTAAGGCGTATAAGGCGTGCCAACGGACAAGGCGTCTCGAACAAGGCGTTAAGGCGTAGGAATGCACTAAGGCGTAGAAGGCGTCGAAGGCGTAAGGCGTCTAAGGCGTGACAAGGCGTCAAGGCGTGGTGAAAGGCGTCTAAGGCGTATGAAGGCGTAAGGCGTAAAGGCGTCAAGGCGTAAAGGCGTGTACCAGGGAAGGCGTCAAGGCGTAAGGCGTATGCAAGGCGTATCTACAAGGCGTTAAGGCGTAAGGCGTTAAGGCGTCCTGCAAGGCGTTGAGCTCCATGTAAGGCGTATAAGGCGTAGAAGGCGTAAGGCGTAAGGCGTTAAGGCGTAAGGCGTCTGCCTCAGAAGGCGTAAGGCGTCAAAAAGGCGTCAGATTGAAGGCGTAAGGCGTAAGGCGTAAGGCGTGCACAAAGGCGTTAAGGCGTGGCGTGTCGCCAAGGCGTTACTATGGGAAGGCGTCTGAAGGCGTAAGGCGTAACAAAGGCGTTGGGAAGGCGTGTATAAGGCGTAAGGCGTGTAAGGCGTAAATGCGTAACGAAAGGCGTACACGTAAAGGCGTTAAGGCGTTAAGGCGTGAAGGCGTTCATAAGGCGTAAGGCGTCGAAGGCGTCAAGGCGTTGGAAGGCGTAAGGCGTAAGGCGTTAAGGCGTTAAAGGCGTGAAAGGCGTAAGGCGTCATCAAGGCGTAAATCAGTCAAGGCGTCAAGGCGTAGAAAAGGCGTGTTGAGGAGAATTGAAGGCGTAAGGCGTTATAGTGAAAGGCGTAGCAAGGCGTAAGGCGTAAAGGCGTTTGAAGGCGTATATCAAGGCGTAAGGCGTCAAGGCGTATAAGGCGTTCAAGGCGTAAGGCGTAAGGCGTGGGAAGGCGTATAAGGCGTTGAAGGCGTCGTCTAAAAGGCGTTACAACTTAAGGCGTACCTGCTCCCAAAGGCGTTGAAGTTACACTGGAAGGCGTAAGAGAAAGGCGTGGCAAGGCGTTAAGGCGTGGAAGGCGTCGTCAAAGGCGTTAAGGCGTGAGACTAAGGCGTCGGGAGCAAAGGCGTGAAAAGGCGTTTCCCAAAGGCGTGGCTCAAACAAGGCGTTGTAGCAGAAGGCGTATCAAGGCGTGGCGCT"
    pattern = "AAGGCGTAA"
    indices = kmp(text, pattern)
    print(' '.join([str(i) for i in indices]))
