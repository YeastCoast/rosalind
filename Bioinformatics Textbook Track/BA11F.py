from math import inf

massTableDictionary = {"A": 71,  "C": 103, "D": 115, "E": 129,
                       "F": 147, "G": 57,  "H": 137, "I": 113,
                       "K": 128, "L": 113, "M": 131, "N": 114,
                       "P": 97,  "Q": 128, "R": 156, "S": 87,
                       "T": 101, "V": 99,  "W": 186, "Y": 163}
value_aa_dict = {massTableDictionary[i]: i for i in massTableDictionary}
AA_DICT = {"X": 4, "Z": 5}
VALUE_DICT = {4: "X", 5: "Z"}


def protein_to_mass(peptide: str, amino_acid_dict: dict) -> tuple:
    return tuple(amino_acid_dict[i] for i in peptide)


def masses_to_vector(masses: tuple) -> dict:
    return {i: [0 for _ in range(masses[i] - 1)] + [1] for i in range(len(masses))}


def score_peptide(vector: tuple, spectrum: tuple):
    if len(vector) != len(spectrum):
        return None
    return sum(int(i)*int(j) for i, j in zip(vector, spectrum))


def scan_proteome(proteome: str, spectrum: list, amino_acid_dict: dict):
    score = -inf
    best_match = ''

    masses = protein_to_mass(proteome, amino_acid_dict)
    vector = masses_to_vector(masses)
    for i in range(len(proteome)):
        print(i)
        start_vector = vector[i]
        for j in range(i+1, len(proteome)):
            start_vector += vector[j]
            current_score = score_peptide(start_vector, tuple(spectrum))
            if current_score is None:
                continue
            if current_score > score:
                best_match = proteome[i:j+1]
                score = current_score

    return best_match, score


if __name__ == '__main__':

    test_spectrum = "0 0 0 4 -2 -3 -1 -7 6 5 3 2 1 9 3 -8 0 3 1 2 1 8"#
    test_proteome = "XZZXZXXXZXZZXZXXZ"
    test_spectrum_lst = [int(i) for i in test_spectrum.split(' ')]

    best_match, score = scan_proteome(test_proteome, test_spectrum_lst, AA_DICT)

    print(best_match)

    spectrum = "27 30 12 15 18 2 9 18 -19 8 -15 19 21 20 15 22 -4 -14 25 -11 28 26 27 -20 8 -3 -12 26 -16 7 6 -9 7 -20 -9 4 30 2 -11 -12 3 3 16 20 -17 17 15 23 -2 13 6 14 -18 -20 19 11 7 27 0 25 -3 27 1 12 14 16 -10 -5 -17 3 12 -4 27 0 6 -1 5 16 8 -17 13 24 -14 1 8 26 17 12 24 -3 -20 -1 -15 1 23 -5 22 3 13 30 -6 20 20 -17 16 30 24 1 3 -5 -8 -19 7 -6 8 -12 -2 27 25 -4 13 10 -11 18 1 -6 26 2 -11 22 4 -11 -11 -3 -17 1 -9 -11 3 -11 -9 -19 -12 2 15 -6 -15 4 6 17 -14 -16 10 26 26 1 -3 8 16 -7 10 -11 -17 -14 24 27 19 -5 -4 -8 -17 -5 -4 20 -13 -11 6 2 17 15 8 1 -12 18 22 6 2 12 -11 -6 2 15 -5 10 17 -19 -3 -19 18 -2 17 0 -17 -19 -8 -20 27 -3 15 19 -5 23 -19 -17 14 29 5 -6 11 -3 -15 -11 -4 5 19 17 3 -20 -2 7 8 28 2 20 20 23 0 30 8 18 -13 4 -15 -18 8 -6 -4 1 5 30 -18 7 8 -14 29 -17 -20 -18 14 25 20 24 26 -17 10 26 23 12 9 8 30 -9 -10 5 2 23 -15 2 -2 -11 -20 -16 -19 -15 -10 12 -5 -1 2 23 19 -4 30 -12 20 16 -19 2 -7 21 11 -17 -7 19 19 1 30 -10 -16 22 -14 1 11 -4 22 6 -4 0 9 -1 9 25 21 -6 -14 16 -9 14 -10 -14 10 8 -14 11 30 7 -13 21 -10 19 -1 22 24 7 -13 -11 1 -7 26 -9 17 14 -15 19 5 10 5 26 -15 -14 0 -16 2 -19 -11 20 -4 -15 28 7 22 0 -10 17 9 6 28 30 15 27 12 -5 30 27 -6 6 -12 10 8 1 3 -1 11 -17 1 21 23 13 29 -19 -8 7 -20 11 -12 12 3 -13 30 13 0 -19 0 -6 30 29 7 11 25 12 -19 24 20 -1 0 -11 3 20 -13 8 -18 -7 -8 21 20 -3 30 6 -11 10 12 28 12 0 -7 8 -5 -14 -10 -19 -4 30 14 -14 17 20 -3 8 30 30 29 -17 24 6 -6 6 -2 19 30 -4 7 4 17 -4 -4 -6 -10 30 7 0 30 13 9 9 -11 -14 -19 -20 14 9 -2 -1 19 22 -13 -10 29 16 22 -16 -3 -5 -1 17 30 -12 -16 14 3 -16 -5 22 15 -1 15 6 24 -18 -16 23 3 16 30 11 9 -10 23 9 -18 -18 5 -6 18 23 -17 -2 6 25 -12 -1 26 2 -1 14 -8 -20 1 -12 15 16 -4 18 5 -14 16 6 17 -1 14 2 5 9 -9 -7 1 21 27 -15 -14 -1 29 -3 -2 14 25 17 -3 25 -13 24 6 17 28 27 1 21 17 -4 25 28 30 25 10 -3 27 13 22 19 0 -9 3 15 -14 27 5 -10 26 -14 -3 19 27 7 -6 13 -16 23 2 19 -12 19 -9 10 8 -12 -8 -16 21 3 -10 -8 -20 -3 3 -19 -6 -14 -8 30 2 -6 -9 29 7 -15 -12 -19 24 -6 23 -2 -1 -18 -15 17 -11 3 2 -11 7 -19 22 -13 12 1 0 -14 -12 -8 7 1 -6 -2 8 -12 18 -13 -1 28 17 -20 -2 -7 4 22 3 -5 2 -12 5 8 14 -2 -14 15 3 10 2 -16 -9 15 -10 20 -17 1 -2 -9 24 -12 -3 -15 30 -18 -19 19 7 29 7 16 -1 -12 -17 -10 13 21 25 22 1 14 2 -15 11 14 1 16 17 3 15 -3 26 -11 20 -19 20 -4 3 -8 9 -10 -2 30 0 -6 0 -9 9 -16 29 7 3 1 14 20 17 30 -10 25 13 -12 8 18 -7 3 -18 10 11 -7 0 21 -16 -8 -20 -18 11 -9 -8 -5 2 -2 -7 -17 14 16 -12 17 -6 11 3 12 -12 -12 23 20 -15 14 14 14 -14 15 -12 -3 10 -11 15 -10 18 1 -6 4 9 4 -8 10 -7 9 11 25 -12 -8 9 14 9 -19 -16 18 12 -11 -19 4 -17 6 -7 -13 12 -9 19 -20 9 -6 6 -20 4 11 -20 20 2 12 4 -3 30 16 17 18 -16 8 4 -3 0 -20 18 22 -1 -3 -6 13 -2 20 5 -13 -11 6 -19 9 13 25 -6 0 -14 1 1 23 28 3 13 9 25 -15 -5 18 -13 4 21 -5 10 12 5 -5 22 16 0 -6 -10 16 -4 24 23 -14 -5 -12 -20 19 -12 -7 -3 0 -3 12 21 -12 -16 -15 29 14 -4 -9 6 30 20 6 -8 -13 28 14 27 -3 27 -10 -8 23 22 11 22 -16 21 23 14 -20 -12 13 -16 16 1 13 17 0 25 21 17 25 25 11 6 19 -9 6 -11 -7 23 16 -2 30 2 26 -7 7 -13 30 30 10 6 -16 22 -8 24 26 -16 30 22 -12 -4 -2 -19 14 -13 17 -14 -20 -17 -11 -8 -13 -3 22 29 18 -13 17 -11 14 -16 2 18 7 -2 -4 7 27 -9 20 15 -6 27 -10 24 -16 -1 -15 4 17 17 23 -16 24 12 -10 3 13 -6 0 26 -20 19 24 16 28 7 -12 16 -17 -12 -5 -14 9 8 -5 -13 -9 -16 30 -3 -16 23 -16 4 -12 10 -17 -15 -9 -1 9 21 7 30 -20 14 -17 18 24 26 -5 13 -3 17 -18 18 27 -12 -7 14 -11 21 -9 10 -7 -18 -5 16 15 26 1 8 -16 -7 5 8 -16 19 -2 17 16 -15 8 -17 -18 -14 -17 13 9 20 13 15 9 -11 6 -18 16 -20 14 8 23 6 19 3 -11 -11 -10 -3 -10 -17 29 14 15 7 19 -10 23 16 -4 1 -13 -2 -17 2 -17 29 13 20 21 15 7 -5 28 -14 -9 3 22 7 -10 26 -17 4 17 -5 8 25 15 7 -20 0 7 25 25 -2 17 15 7 2 9 -18 11 26 -8 23 -14 1 12 -17 29 -20 13 27 -4 6 1 7 15 5 7 -7 27 22 28 -13 17 28 -8 -7 20 4 1 -5 9 -7 6 5 -15 28 26 11 -10 -8 25 -7 4 13 -19 -18 23 23 1 -8 -2 7 -11 -3 -4 3 8 15 18 -18 6 -13 -15 12 6 27 -1 3 30 4 -2 -6 15 -12 -20 17 18 8 23 22 0 16 11 -13 13 19 10 25 -12 8 24 18 7 -17 13 8 19 20 -13 11 -12 7 18 -11 29 10 -16 -2 -1 -1 12 -3 22 11 28 20 10 16 -3 -18 8 -12 22 13 0 -7 -7 26 -8 11 13 -13 -2 28 11 -11 24 6 8 20 27 -19 18 25 -7 8 8 19 21 -4 -10 -7 -20 13 19 -8 -2 -16 -6 10 -8 28 14 16 -4 -10 -4 8 1 -8 -20 -11 18 14 -16 28 -16 27 29 -1 16 -11 4 -13 -20 7 25 -2 18 10 27 19 -16 20 0 16 3 -12 8 -14 26 6 21 6 16 24 4 30 -11 16 30 2 12 -18 18 -10 2 2 -19 20 30 20 8 13 -1 -17 28 27 -13 13 -20 18 22 -2 4 16 11 21 1 24 6 1 26 16 16 23 -20 11 6 18 21 19 10 22 10 -5 -3 -12 22 -16 -15 -8 -6 -2 7 -4 23 -1 18 -2 -14 -7 -6 23 -11 -7 -17 2 19 18 15 12 14 15 -4 -20 -6 24 21 10 10 6 11 26 19 19 26 -18 5 0 -20 -8 21 15 25 7 6 21 13 20 -2 22 16 20 23 -1 -12 -8 -17 3 -20 -1 2 25 24 -6 10 28 25 14 6 25 2 1 -5 0 16 13 22 -4 12 -1 3"
    proteome = "MFAGKLGMCDSYMALICRDCGWTTWQNSFQHNLRFCGCSLQHALCPGNQAQRTYVCMNLIFCEQAYYRWYNCVKDNRFVAMVTQEEEHMEFPFMDASVSFSWRYPRNMVEIDWYENGCEAYADVMEGGWRLSFQNMCIMAMKEVHYFSLRIYWGWIMANMCGITWLTYFSIVWPECLRLENSKPRNTIMLPQFFASLYNCREPTIQYPQCFEEQTIEKGDICEVIVGITFTNKIKSHKAQFKNLSIKHKEGQDFCMAMRIKFVILLRYWWKTGDLDMSEHQYTRIAQGAKFDLRPCWKRPDVDPDTAGEDIGAYWGCAFVPHSYEALCVSAHEHPQCKQDQMLTNEVTDIPWQMKPQTIIQVWMWDFAPKFKNLSDNNTPLSLGWNVRETEYTKKIKYKYWRPSTLRSYIWAHMAHYEFEQRKPEFNVTWLWDYYSKIGVENLILAWYGHHGWCSHVENRAALCFQFGPSTIPEWIHRMIDSDNQRTFDSGKTCSICFTPEMVFMLWLTPINRWEWRWMVATDGWIPEKPLGATMTRACQFRKGIMSTFPLLFFIQRWPKCSWGYNQSDNNIIKSTQCYEEFNYYTRLAWWQYMIMVACSRIVSPQSYLGWHSMVLGFMKNAKMRHWHDVPTPQPRMACISTKVMAYKSSFRLRRMNKVPYREGLRLKGWNMYFNCCYHNLDHRMNQKFLGGRALMWRNQLMNTTKHFHFANYTECPCPVVGDYETRHAEFDWRLNVRWSSDAQHFHCTAKCLLKNKEMFADETVFLTKIWNQKKDQYRMQSQITQWENACYLRHGRRFGNRNDQKWKTNFTMDDPEGDNYSLFSRMIGQHIHLNVHDDNFDQKTWCHERIWRVVKNPRHKFEESWHWIAINLRCMEPQQLLRSYKSYKTATIYDFWTEWKWFSEHNVTSVFFVNSLGVLMPYMLGHFEILIPWQPSYWAQTIQGCEHWPPTECLMDNWEMCCQSNCVVMDKRYDLVGAQCGWFYDGCHTAAQHLGAYLGCPQITFIVVQAIRRTHYVQVYNSRQQMLHWHRGWCFDMWGHWCTSWGLKWDIVEMIDNGYEYQKAYCWDKQQYPNTVPVLIMTQDKEENPSMGTTRESVHTHSFSYTYESPACHNYPKFAHEFMRMQAPWTFIIRCQDICNYNIRWNKLCPVQMIWPLWERILWPQASAVDLLEAGHNCHDFGGCWNMEYAKRRSGQLYARTMQSNPFESGIWITATRGVSFHDAQSWWDQTKHTLYFEHFWNTPHRSTWGWNHALRCPDVYLDLQLDFHNDKPNNMQNHEYGPRRKCCLTNEDGNSQYDEKKPQKDCQNVPSEEYVCHENRIPWLMDYLEHSVSQMHDVLHMDFRAAMSAEQEVIKDEYILMWKMWGEMFECKHPQTCPHQSYGRLLLRPHFNMILKKVAHPSFGLREMVMCWWMTASYSPFTLTKRPMNNRKLIYTWHDVSVECQSWESDVMDDQDKFDATTTGARCKWNNPHVHCSVDKVAWEYNHDYDWAHDHKSVSIFRPRDITSKQCIHAPCMFGNENLTQHCRLNMKITYAHVIFNVGGKTMEMTQCPTKEHDCECSVLTDCYPYYFSVFQRDGKIWRGSSVAVWLFFMEIMQAHELVNKCRRNRAPEFCHYAMGYYLAQVAQPKCGQNFQGMQDYFGGRCGEVVESHTWRCHYSKIGLRQDRMCVWRRCTSKTPMAAWDDWWTSDYQKIIGHSKSPTNSLKPAKTGESYEESKTALYWCGVMWSDWHMQKGPQQILWLMFWLYVFSTLGNRFDEPWCIVCGGKCCIGSQINQGQRFAGCVSIHKCGRHIPIESVLHQHYHAWKLNQHNIAQSGQKYPGEARHDCNQQDCSMCIKGFPVVPERQFTWKSMTWFWSSRWCACVVRPGPCSMDMGETTGIGWKNEATGVGCKLRMDFKQPPNVIVAHHKTRAALSRPGLWSEGILWQCKIDFMYPWLVESTENQQIGCGYMSLNYKVNLNYDFKIHFKPYESKCWVGNRLDSQAKHGWVDDEDEESDSECFDWSMLHHCVIFYIGGWLFYMRTHFYVCCDSWNYQWAMHSEALNWKILDVLGHPLPPTELEMCWFNTPSKFWLECFQGDVCPRMAAHPDASQHYLTMQCLFSCLKDVVWHFEQVHRYDNLVRNCGMDMMYWAWSDVKADNYKFECGQSIMYAETTIVPKGHRTWEDDYHDGSMVTYIEHKEDCIFTHAIPECILWCKYAWTYEQHYDRHGDACIHQFCYPDVSDPVNYGQHIMRIWLAFYNPICLRTIASRDFHDLKMWVMKWTQHVRDGKLVSTMMPGAFKHDLISEGPQAFFEVTESEHFRNKYDWLQMEGWSHWHQSTEHCANAIQCVAGGKERYDMVVFLENDMCKWAQQKTQIHVYINKHVMWHVNSQMSCQAVTGNGRRQLVNYFSMNLQNSGQDSGPFTREQLPQALKPAMWAQRFTHLLLPICMMRVHMAVTAMMTYWVDFKKKGPISIQICIEPCAWAGGKMAPIFQWQMKDICYQTNYCVMYKLGPFMADACWCYLHHGMLYTNQRCWYGPPRNWWEFMASGPPDLFKGWFRQIFKKTNNIAHCRSKADFKVTLVPVMSTPGEGSWMLVLTNKGWRRESPIDHNIYPRFYPFNYILQFAWAIWSWEMVRYLKACWMINRFWLHAQENEYVKWQTKGKENLKGCGGQAHYHWRQQWGRQYELQWPTSCGCMTKMCLRWEPADHGDSLETACCDICRWTEMTYEGMRDWMCWWLYTKQFYSNRKLHKHKHHNCKDQERMEPMNMNYFTVMCPDVCSNIFCYLRYNYPVRWWRRHHMSGMVSNMRLNLHSPRRVFWSNNTNMSFMHFKHNMYWQTLQDRNSESNRYCQGMYWVTGRFEFQAVQVPIAREFKHHHKIQEMYELREIQSIYPHDCVFMICYEMQAGWDRGQTQVGKGLPEYLQDLRNMKKYDDYWLKYTLHMFSTSRYVKCNPSLAQILWYMPRGRPRCGTEGMMPPVTYQVITQFPRSPPDKQFGDSFAMFNTNSQMTKAFKSMWHVDYHYWGKMVPTRSVPRMKNGWQDECWICNNRMCSMPQVMPECWECTNWVWDWQGHSWDHGHCCFDAEDYAHYSQPYETQDVTKYFTIRFGNKEGFCVAFYWRNTRSYYEKYCVYTGWAAFWKWCQCTPMKVMHCAQSKNCFGPPENSSDWEFTGKVFSKLRVEHADDIDMACICEPGRNPVTYYRKPYQKEDVTIRPAICRDMESSAHRGEQHWLTYSETQVPKVHIMLDVQMWEMALEVWDFAHTARQLCTMRGCSWSWASRMWYPGMVNPPDQVPGCMYQFHYGTLKEWKEPDEECWIQFQKYAKTYAINILAYCKHLEQACHRETENGGTVNPEIPDTEERHIVAAKTWAKWCGPAPTDAKPTHKKQEHTPMWGFKIYDHMFYHWIPQRPPLHKYNNPVSYMYVKVEQNGGCQGIKNHGICSREANFGPQNEFKNPMCIGPYVWLAMCAKRAKDASHLQGLTVAGQQWPEVHAEPSMNMWWYLIDQKDAEMQDDYTAGKSLPYHMTILRYVWWAIGMYKYTNATMPYCAKYAKPLFHHLMMIMLWKIGRWKSGDEKNPYFGLANMNITLPIFNQCLTMFKGAHHAIHDQPGWNVRWTNPWPAAHQGYSSYRCRWPFASWHPWEMWQARLSKESNPCHMHLWFWESIGNVWEATYNPKFLFPKYFVDRKHKPWNLVVHYAWILDMMPVLGCTRIVAWPQSRYFRYASKKVDTGEHGRTPTEMISIGHAVGCLVHYSDMVHNEYNFHIIITGEPMNAYERKLARCQMVLKQWDKVASWMFEWLTYHSINYEVPCFAMWEKAMMQDGNGSEMTQAARHYTRLCTAMMFGALYRQGPGFILPPRMFKTCTQVGRGARNAQFCGPQYSFHACRNQLGCKQMEMIYRDVPCEGTGLPAGFDTQWCDGIMDPTRSDNRDIGCKVKRAAVYFSKHNCTDCYNGLSDGQQNWWNFRKWMSRDDDPGNHFFAMKKHGKPPDLCFEEPSGDNIVKSKVIYQFWHQHRKLHSACKACLGFGDMTDWDSEIWELWLTNWICRCTRGAEDGFQKHTYKMINLDAYILRMQWVIYDVTKLNLFDFQMVVGQQVRQFKEGDLRMFESIVTRLGNFGASNIQTLVGYVSKTLPASLDKWTRFIIWGEQGFIVMQEGDVYWTQDHAELRPCIHQKSQQYACLDDLTQRMHTLNFVVMLWKCSHGRWDEAWRWMIRLKCCYFCKSYTGPAVCVEVLGILATRFWENWNLQKPRCRRTAIQQMCKIDGDNEMFIDHASAWFFAPGVGKHGCPMKAQPLLFANKYCIYRSSRTWRMDFNNREMHNGSIFDAWAGLVRPEHSTDYLEKFMGEQTHPSYPNHWTMFHGCASSKFKLILLDKNDKAYLMVQGYSVAQNGDKNELRTHVPFRQKSMSDKNHIQRMMCTVPAFHIKERNWDKVFPMMQFWSTYSEMFKMWGHHVWIQQSLAPYQYQAYAHRTFCRPPPGFWEAAAKDRHRWEEVIFDTINPFCQDCCLYVRFNEGHGTWCQAGMRKNVTYRNNTQHSAVTLAMGMHCNDYEIQSPWQQFTNWPRYIVMDHCDKGYWKYVAGIQVMFEVQTYQENYHHGEWRYMGISLIGHVCINELKIAPPTEYLYQTGTFASCGIPLVLLCMYFPEVQANVAQYGHRVPQSDDPSKVHSRTYCNMEESRLMIYTQSYQKITTIWIPRAMYLPGNTLWINELFVGRTLWHAWHTGVWYKNTRGIRVQGGNQCAMDPSKYHWCTYREVHTKWVDLDCRWYDMLKFRILRIAWGQEIYIEICTPYWRPRMTHVENEDKVRVNCLCLVCEWMWYCMHVQSFCCCWGRCYTWERWNHFFKVTNLRYLSVVCVFPVNVEREGLSQIIFPHDQRTWCCPDYEFNIKQEYIHNSTDFRQPEMNKVSPTYLYECAPQWRLGEVSFFKIWIMEQERYQDLGSQTWCEVRCTTQWQQRPACAGWDDHAYPDGKCKDGQKEYSKGYGFQRALRARYVYYTGCQPQT"
    input_lst = [int(i) for i in spectrum.split(' ')]

    best_match, score = scan_proteome(proteome, input_lst, massTableDictionary)

    print(best_match)
